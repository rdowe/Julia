using Pkg
Pkg.add("DifferentialEquations")
using DifferentialEquations
using Plots



#(θ, s)

#Defining the problem
D = 0.4 #Drag coefficient
function glide!(du, u, p, t)
    #d\theta/dt = (s^2 - cos(\theta)) / s
    du[1] = (u[2]^2 - cos(u[1])) / u[2]
    #ds/dt = -sin(\theta) - Ds^2
    du[2] = -sin(u[1]) - D*u[2]^2
end
ts = (0.0, 17.0)

#Initial Conditions
u0 = [1.0; 0.5] #[θ; s]

#Solving the system
sys_prob = ODEProblem(glide!, u0, ts)
sys_sol = solve(sys_prob)

#Plot solution -- phase plane and time graphs for both theta and s
p1 = plot(sys_sol, idxs=(1, 2), legend = :outertopright, size = (700, 600), label = ("θ", "s"),
    xguide = "θ (rad)", yguide = "s (m/s)")
p2 = plot(sys_sol, idxs=(0,1), label = ("θ(t)"), legend = :bottomright)
p3 = plot(sys_sol, idxs=(0,2), label = ("s(t)"))

#Making a layout to see all three graphs at once
l = @layout [a ; b c]
plot(p1, p2, p3; layout = l)
